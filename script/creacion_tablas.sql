CREATE DATABASE E_VALE;

USE E_VALE;

/*PAIS*/
CREATE TABLE E_VALE.EV_PAIS
(

ID_PAIS			INT	AUTO_INCREMENT,
NOMBRE_PAIS		VARCHAR(30),
PRIMARY KEY (ID_PAIS)

);

/*CIUDAD*/
create	TABLE	E_VALE.EV_CIUDAD
(

ID_CIUDAD		INT	auto_increment,
NOMBRE_CIUDAD	VARCHAR(30),
ID_PAIS			INT,
primary key	(ID_CIUDAD),
foreign key (ID_PAIS) REFERENCES EV_PAIS(ID_PAIS)
ON DELETE CASCADE ON UPDATE CASCADE

);

/*COMUNA*/
create	TABLE	E_VALE.EV_COMUNA
(

ID_COMUNA		INT	auto_increment,
NOMBRE_COMUNA	VARCHAR(30),
ID_CIUDAD		INT,
ID_PAIS			INT,
primary key	(ID_COMUNA),
foreign key (ID_CIUDAD) REFERENCES EV_CIUDAD(ID_CIUDAD)
ON DELETE CASCADE ON UPDATE CASCADE,
foreign key (ID_PAIS) REFERENCES EV_PAIS(ID_PAIS)
ON DELETE CASCADE ON UPDATE CASCADE

);

/*COLABORADOR*/
CREATE	TABLE 	E_VALE.EV_COLABORADOR
(

ID_COLABORADOR			INT auto_increment,
RUT_COLABORADOR			VARCHAR(10),
NOMBRES_COLABORADOR		VARCHAR(100),
PATERNO_COLABORADOR		VARCHAR(50),
MATERNO_COLABORADOR		VARCHAR(50),
DIRECCION_COLABORADOR	VARCHAR(100),
ID_COMUNA				INT,
ID_CIUDAD				INT,
ID_PAIS					INT,
PRIMARY KEY(ID_COLABORADOR),
FOREIGN KEY(ID_COMUNA)	REFERENCES	EV_COMUNA(ID_COMUNA)
ON DELETE CASCADE ON UPDATE CASCADE
);

ALTER	TABLE	EV_COLABORADOR
ADD
(
FONO_COLABORADOR	VARCHAR(15),
EMAIL_COLABORADOR	VARCHAR(100)
);

/*CARGO*/
CREATE 	TABLE	E_VALE.EV_CARGO	
(

ID_CARGO		INT auto_increment,
NOMBRE_CARGO	VARCHAR(50),
PRIMARY KEY(ID_CARGO)

);

/*TIPO_EMPRESA*/
CREATE 	TABLE 	E_VALE.EV_TIPOEMPRESA
(

ID_TIPOEMPRESA		INT auto_increment,
NOMBRE_TIPOEMPRESA	VARCHAR(30),
PRIMARY KEY(ID_TIPOEMPRESA)

);

/*GIRO_EMPRESA*/
CREATE 	TABLE 	E_VALE.EV_GIROEMPRESA
(

ID_GIROEMPRESA		INT auto_increment,
NOMBRE_GIROEMPRESA	VARCHAR(30),
PRIMARY KEY(ID_GIROEMPRESA)

);

/*EMPRESA*/
CREATE 	TABLE 	E_VALE.EV_EMPRESA
(

ID_EMPRESA				INT auto_increment,
RUT_EMPRESA				VARCHAR(10),
NOMBRE_EMPRESA			VARCHAR(100),
REPRESENTANTE_EMPRESA	INT,
DIRECCION_EMPRESA		VARCHAR(100),
ID_COMUNA				INT,
ID_CIUDAD				INT,
ID_PAIS					INT,
FONO_EMPRESA			VARCHAR(15),
EMAIL_EMPRESA			VARCHAR(100),
ID_TIPOEMPRESA			INT,
ID_GIROEMPRESA			INT,
PRIMARY KEY(ID_EMPRESA),
FOREIGN KEY(ID_COMUNA) REFERENCES EV_COMUNA(ID_COMUNA)
ON DELETE CASCADE ON UPDATE CASCADE,
foreign key (ID_CIUDAD) REFERENCES EV_CIUDAD(ID_CIUDAD)
ON DELETE CASCADE ON UPDATE CASCADE,
foreign key (ID_PAIS) REFERENCES EV_PAIS(ID_PAIS)
ON DELETE CASCADE ON UPDATE CASCADE,
foreign key (ID_TIPOEMPRESA) REFERENCES EV_TIPOEMPRESA(ID_TIPOEMPRESA)
ON DELETE CASCADE ON UPDATE CASCADE,
foreign key (ID_GIROEMPRESA) REFERENCES EV_GIROEMPRESA(ID_GIROEMPRESA)
ON DELETE CASCADE ON UPDATE CASCADE

);

/*OBRA*/
CREATE 	TABLE 	E_VALE.EV_OBRA
(

ID_OBRA					INT auto_increment,
NOMBRE_OBRA				VARCHAR(100),
ADMINISTRADOR_OBRA		INT,
FONO_OBRA				VARCHAR(100),
ID_COMUNA				INT,
ID_CIUDAD				INT,
ID_PAIS					INT,
ID_EMPRESA				INT,
PRIMARY KEY(ID_OBRA),
FOREIGN KEY(ID_COMUNA) REFERENCES EV_COMUNA(ID_COMUNA)
ON DELETE CASCADE ON UPDATE CASCADE,
foreign key (ID_CIUDAD) REFERENCES EV_CIUDAD(ID_CIUDAD)
ON DELETE CASCADE ON UPDATE CASCADE,
foreign key (ID_PAIS) REFERENCES EV_PAIS(ID_PAIS)
ON DELETE CASCADE ON UPDATE CASCADE,
foreign key (ID_EMPRESA) REFERENCES EV_EMPRESA(ID_EMPRESA)
ON DELETE CASCADE ON UPDATE CASCADE

);

/*CONTRATO*/
CREATE 	TABLE 	E_VALE.EV_CONTRATO
(

ID_CONTRATO				INT auto_increment,
ID_COLABORADOR			INT,
ID_CARGO				INT,
ID_OBRA					INT,
ID_EMPRESA				INT,
FECHA_CONTRATO			DATE,
PRIMARY KEY(ID_CONTRATO),
FOREIGN KEY(ID_COLABORADOR) REFERENCES EV_COLABORADOR(ID_COLABORADOR)
ON DELETE CASCADE ON UPDATE CASCADE,
foreign key (ID_CARGO) REFERENCES EV_CARGO(ID_CARGO)
ON DELETE CASCADE ON UPDATE CASCADE,
foreign key (ID_OBRA) REFERENCES EV_OBRA(ID_OBRA)
ON DELETE CASCADE ON UPDATE CASCADE,
foreign key (ID_EMPRESA) REFERENCES EV_EMPRESA(ID_EMPRESA)
ON DELETE CASCADE ON UPDATE CASCADE

);

/*USUARIO*/
DROP TABLE IF exists E_VALE.EV_USUARIO;
CREATE 	TABLE 	E_VALE.EV_USUARIO
(

ID_USUARIO				INT auto_increment,
ID_CONTRATO				INT,
USUARIO					VARCHAR(20),
PASS					VARCHAR(20),
FLG_VIGENTE				INT,
PRIMARY KEY(ID_USUARIO),
FOREIGN KEY(ID_CONTRATO) REFERENCES EV_CONTRATO(ID_CONTRATO)
ON DELETE CASCADE ON UPDATE CASCADE

);




